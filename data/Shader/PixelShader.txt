// t0. 레지스터를 0번으로 세팅(0번 레지스터를 쓰겠다고 선언)
// 여기서 레지스터 숫자 잘기억해놓고
// ImmediateContext->PSSetShaderResource함수의 첫번째 인자로 해당 레지스터 번호를 넘긴다.

Texture2D		g_txColor : register(t0);
Texture2D		g_txMask : register(t1);
SamplerState	g_Sample : register(s0);

struct VS_OUTPUT
{
	float4 p : SV_POSITION;
	float2 t : TEXCOORD0;
};

// 정점쉐이더로 부터 받은 VS_OUTPUT
float4 PS(VS_OUTPUT input) : SV_TARGET
{	
	//텍스처에서 t좌표에 해당하는 컬러값(픽셀) 반환
	float4 color = g_txColor.Sample(g_Sample, input.t);
	float4 mask = g_txMask.Sample(g_Sample, input.t);
	float4 final = color;	
	// 소스알파(1) = 마스크이미지의 검정색부분은 불투명된다.
	// 소스알파(0) = 마스크이미지의 흰색부분은   투명된다.
	final.a = 1.0f - mask.r;
	return final;
	//return color;
}

struct VS_TEST
{
	float4 pos : SV_POSITION;
};

float4 PS2(VS_TEST color) :SV_TARGET
{
	return float4(0.0f,0.0f,0.0f,1.0f);
}